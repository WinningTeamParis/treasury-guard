{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hooksAddress",
          "type": "address"
        }
      ],
      "name": "AddressDoesNotImplementHooksInterface",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "safe",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "hooksAddress",
          "type": "address"
        }
      ],
      "name": "HooksChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "enabledHooks",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "safe",
          "type": "address"
        }
      ],
      "name": "getEnabledHooks",
      "outputs": [
        {
          "internalType": "address",
          "name": "hooksAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hooks",
          "type": "address"
        }
      ],
      "name": "setHooks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061025c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806380479c3414610046578063c703895c1461008b578063fb63daa1146100b7575b600080fd5b61006f6100543660046101d4565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61006f6100993660046101d4565b6001600160a01b039081166000908152602081905260409020541690565b6100ca6100c53660046101d4565b6100cc565b005b6001600160a01b0381161580159061015057506040516301ffc9a760e01b815263483f0e2b60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801561012a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014e9190610204565b155b1561017d57604051636b38fdb360e11b81526001600160a01b038216600482015260240160405180910390fd5b3360008181526020819052604080822080546001600160a01b0319166001600160a01b03861690811790915590519092917f4bdb0c6d693920823a574df92b20cb20886d27ac1e4e522e48f2e57bb668423b91a350565b6000602082840312156101e657600080fd5b81356001600160a01b03811681146101fd57600080fd5b9392505050565b60006020828403121561021657600080fd5b815180151581146101fd57600080fdfea2646970667358221220643f977707531a4cb9fead69117a3c29b116e028db1970675b41890e29ba9a0264736f6c63430008140033",
    "sourceMap": "135:1246:2:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806380479c3414610046578063c703895c1461008b578063fb63daa1146100b7575b600080fd5b61006f6100543660046101d4565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61006f6100993660046101d4565b6001600160a01b039081166000908152602081905260409020541690565b6100ca6100c53660046101d4565b6100cc565b005b6001600160a01b0381161580159061015057506040516301ffc9a760e01b815263483f0e2b60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801561012a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014e9190610204565b155b1561017d57604051636b38fdb360e11b81526001600160a01b038216600482015260240160405180910390fd5b3360008181526020819052604080822080546001600160a01b0319166001600160a01b03861690811790915590519092917f4bdb0c6d693920823a574df92b20cb20886d27ac1e4e522e48f2e57bb668423b91a350565b6000602082840312156101e657600080fd5b81356001600160a01b03811681146101fd57600080fd5b9392505050565b60006020828403121561021657600080fd5b815180151581146101fd57600080fdfea2646970667358221220643f977707531a4cb9fead69117a3c29b116e028db1970675b41890e29ba9a0264736f6c63430008140033",
    "sourceMap": "135:1246:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;163:47;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;163:47:2;;;;;;-1:-1:-1;;;;;469:32:6;;;451:51;;439:2;424:18;163:47:2;;;;;;;684:134;;;;;;:::i;:::-;-1:-1:-1;;;;;793:18:2;;;746:20;793:18;;;;;;;;;;;;;684:134;1046:333;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1102:19:2;;;;;;:105;;-1:-1:-1;1126:81:2;;-1:-1:-1;;;1126:81:2;;-1:-1:-1;;;1126:81:2;;;657:52:6;-1:-1:-1;;;;;1126:43:2;;;;;630:18:6;;1126:81:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1125:82;1102:105;1098:187;;;1230:44;;-1:-1:-1;;;1230:44:2;;-1:-1:-1;;;;;469:32:6;;1230:44:2;;;451:51:6;424:18;;1230:44:2;;;;;;;1098:187;1307:10;1294:12;:24;;;;;;;;;;;:32;;-1:-1:-1;;;;;;1294:32:2;-1:-1:-1;;;;;1294:32:2;;;;;;;;1341:31;;1294:32;;1307:10;1341:31;;;1046:333;:::o;14:286:6:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:6;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:6:o;720:277::-;787:6;840:2;828:9;819:7;815:23;811:32;808:52;;;856:1;853;846:12;808:52;888:9;882:16;941:5;934:13;927:21;920:5;917:32;907:60;;963:1;960;953:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "enabledHooks(address)": "80479c34",
    "getEnabledHooks(address)": "c703895c",
    "setHooks(address)": "fb63daa1"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hooksAddress\",\"type\":\"address\"}],\"name\":\"AddressDoesNotImplementHooksInterface\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hooksAddress\",\"type\":\"address\"}],\"name\":\"HooksChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"enabledHooks\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safe\",\"type\":\"address\"}],\"name\":\"getEnabledHooks\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"hooksAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hooks\",\"type\":\"address\"}],\"name\":\"setHooks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getEnabledHooks(address)\":{\"params\":{\"safe\":\"Address of a Safe account\"},\"returns\":{\"hooksAddress\":\"Address of hooks enabled for on Safe account\"}},\"setHooks(address)\":{\"params\":{\"hooks\":\"Address of the hooks to be enabled for msg.sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getEnabledHooks(address)\":{\"notice\":\"Returns the address of hooks for a Safe account provided as a fucntion parameter.         Returns address(0) is no hooks are enabled.\"},\"setHooks(address)\":{\"notice\":\"Sets hooks on an account. If Zero address is set, manager will not perform pre and post checks for on Safe transaction.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/safe-core-protocol/contracts/base/HooksManager.sol\":\"HooksManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":safe-core-protocol/=lib/safe-core-protocol/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/safe-core-protocol/contracts/DataTypes.sol\":{\"keccak256\":\"0xfcce6a99ceb499693f9a33aa624affcefcbb9af1fb328f4b2bc4b9f245bb48ba\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://273bc0facf9bbdce85d1d0efc13b7611fcd714d7fe892941927d30b4a3d86ea5\",\"dweb:/ipfs/Qmb6SUZJKBq9MWrKpEX2aA3iBJgtoZWnDbDc6DksVczH5m\"]},\"lib/safe-core-protocol/contracts/base/HooksManager.sol\":{\"keccak256\":\"0x16a03c60d39fa393fec7e24701648e961c01724e2beb5d1523902a5929059b8d\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5e91e07230a10463d3e1dfdce547cd8db9f3ee214419a326df3d655379c739b6\",\"dweb:/ipfs/QmXCfkHxXZUwMvGQEwhj96h6L8Koh4K89HkEBaAeb62EUw\"]},\"lib/safe-core-protocol/contracts/interfaces/Accounts.sol\":{\"keccak256\":\"0xa3dd0d1c1c701479d294e384c4350e3829e69045a2c740a62da353eac45ef258\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://d5b545db0a70b777c30939b8f77f210a269f05f160566cba32eb0337f931a185\",\"dweb:/ipfs/QmcqyCtUotXRCe2mdCkMPtAs2pAViKmA2Pfce92pjZNiXX\"]},\"lib/safe-core-protocol/contracts/interfaces/Integrations.sol\":{\"keccak256\":\"0x8599ee4455a0ef195e4b064017ff432186819838284517ecacb34a924d2e108d\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://12285f4ad925d46c3fb7131ed18014b0d92c058ccfb8d56f39d15decbde551a1\",\"dweb:/ipfs/QmaEMkLuzC8YWmySFjiR5ABJoURwYH9ixVqu2BY4dkd5AW\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "hooksAddress",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressDoesNotImplementHooksInterface"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "safe",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "hooksAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "HooksChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "enabledHooks",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "safe",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEnabledHooks",
          "outputs": [
            {
              "internalType": "address",
              "name": "hooksAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "hooks",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setHooks"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getEnabledHooks(address)": {
            "params": {
              "safe": "Address of a Safe account"
            },
            "returns": {
              "hooksAddress": "Address of hooks enabled for on Safe account"
            }
          },
          "setHooks(address)": {
            "params": {
              "hooks": "Address of the hooks to be enabled for msg.sender."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getEnabledHooks(address)": {
            "notice": "Returns the address of hooks for a Safe account provided as a fucntion parameter.         Returns address(0) is no hooks are enabled."
          },
          "setHooks(address)": {
            "notice": "Sets hooks on an account. If Zero address is set, manager will not perform pre and post checks for on Safe transaction."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":safe-core-protocol/=lib/safe-core-protocol/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/safe-core-protocol/contracts/base/HooksManager.sol": "HooksManager"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/safe-core-protocol/contracts/DataTypes.sol": {
        "keccak256": "0xfcce6a99ceb499693f9a33aa624affcefcbb9af1fb328f4b2bc4b9f245bb48ba",
        "urls": [
          "bzz-raw://273bc0facf9bbdce85d1d0efc13b7611fcd714d7fe892941927d30b4a3d86ea5",
          "dweb:/ipfs/Qmb6SUZJKBq9MWrKpEX2aA3iBJgtoZWnDbDc6DksVczH5m"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-core-protocol/contracts/base/HooksManager.sol": {
        "keccak256": "0x16a03c60d39fa393fec7e24701648e961c01724e2beb5d1523902a5929059b8d",
        "urls": [
          "bzz-raw://5e91e07230a10463d3e1dfdce547cd8db9f3ee214419a326df3d655379c739b6",
          "dweb:/ipfs/QmXCfkHxXZUwMvGQEwhj96h6L8Koh4K89HkEBaAeb62EUw"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-core-protocol/contracts/interfaces/Accounts.sol": {
        "keccak256": "0xa3dd0d1c1c701479d294e384c4350e3829e69045a2c740a62da353eac45ef258",
        "urls": [
          "bzz-raw://d5b545db0a70b777c30939b8f77f210a269f05f160566cba32eb0337f931a185",
          "dweb:/ipfs/QmcqyCtUotXRCe2mdCkMPtAs2pAViKmA2Pfce92pjZNiXX"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-core-protocol/contracts/interfaces/Integrations.sol": {
        "keccak256": "0x8599ee4455a0ef195e4b064017ff432186819838284517ecacb34a924d2e108d",
        "urls": [
          "bzz-raw://12285f4ad925d46c3fb7131ed18014b0d92c058ccfb8d56f39d15decbde551a1",
          "dweb:/ipfs/QmaEMkLuzC8YWmySFjiR5ABJoURwYH9ixVqu2BY4dkd5AW"
        ],
        "license": "LGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/safe-core-protocol/contracts/base/HooksManager.sol",
    "id": 115,
    "exportedSymbols": {
      "HooksManager": [
        114
      ],
      "ISafeProtocolHooks": [
        236
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:1340:2",
    "nodes": [
      {
        "id": 39,
        "nodeType": "PragmaDirective",
        "src": "42:24:2",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 41,
        "nodeType": "ImportDirective",
        "src": "67:66:2",
        "nodes": [],
        "absolutePath": "lib/safe-core-protocol/contracts/interfaces/Integrations.sol",
        "file": "../interfaces/Integrations.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 115,
        "sourceUnit": 265,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40,
              "name": "ISafeProtocolHooks",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 236,
              "src": "75:18:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 114,
        "nodeType": "ContractDefinition",
        "src": "135:1246:2",
        "nodes": [
          {
            "id": 45,
            "nodeType": "VariableDeclaration",
            "src": "163:47:2",
            "nodes": [],
            "constant": false,
            "functionSelector": "80479c34",
            "mutability": "mutable",
            "name": "enabledHooks",
            "nameLocation": "198:12:2",
            "scope": 114,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 44,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 42,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "171:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "163:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 43,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "182:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 51,
            "nodeType": "EventDefinition",
            "src": "231:71:2",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "4bdb0c6d693920823a574df92b20cb20886d27ac1e4e522e48f2e57bb668423b",
            "name": "HooksChanged",
            "nameLocation": "237:12:2",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "safe",
                  "nameLocation": "266:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "250:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "250:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "hooksAddress",
                  "nameLocation": "288:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "272:28:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "272:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "249:52:2"
            }
          },
          {
            "id": 55,
            "nodeType": "ErrorDefinition",
            "src": "322:66:2",
            "nodes": [],
            "errorSelector": "d671fb66",
            "name": "AddressDoesNotImplementHooksInterface",
            "nameLocation": "328:37:2",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "hooksAddress",
                  "nameLocation": "374:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "366:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "365:22:2"
            }
          },
          {
            "id": 70,
            "nodeType": "FunctionDefinition",
            "src": "684:134:2",
            "nodes": [],
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "768:50:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63,
                      "name": "hooksAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "778:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 64,
                        "name": "enabledHooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "793:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 66,
                      "indexExpression": {
                        "id": 65,
                        "name": "safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "806:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "793:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "778:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "778:33:2"
                }
              ]
            },
            "documentation": {
              "id": 56,
              "nodeType": "StructuredDocumentation",
              "src": "394:285:2",
              "text": " @notice Returns the address of hooks for a Safe account provided as a fucntion parameter.\n         Returns address(0) is no hooks are enabled.\n @param safe Address of a Safe account\n @return hooksAddress Address of hooks enabled for on Safe account"
            },
            "functionSelector": "c703895c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEnabledHooks",
            "nameLocation": "693:15:2",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "safe",
                  "nameLocation": "717:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "709:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "709:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "708:14:2"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "hooksAddress",
                  "nameLocation": "754:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "746:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "746:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "745:22:2"
            },
            "scope": 114,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 113,
            "nodeType": "FunctionDefinition",
            "src": "1046:333:2",
            "nodes": [],
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1088:291:2",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 76,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "1102:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 79,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1119:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1111:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 77,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1111:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1111:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1102:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "1125:82:2",
                      "subExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 87,
                                  "name": "ISafeProtocolHooks",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 236,
                                  "src": "1175:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ISafeProtocolHooks_$236_$",
                                    "typeString": "type(contract ISafeProtocolHooks)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_ISafeProtocolHooks_$236_$",
                                    "typeString": "type(contract ISafeProtocolHooks)"
                                  }
                                ],
                                "id": 86,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "1170:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 88,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1170:24:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_ISafeProtocolHooks_$236",
                                "typeString": "type(contract ISafeProtocolHooks)"
                              }
                            },
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1195:11:2",
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "1170:36:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 83,
                                "name": "hooks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73,
                                "src": "1145:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 82,
                              "name": "ISafeProtocolHooks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 236,
                              "src": "1126:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ISafeProtocolHooks_$236_$",
                                "typeString": "type(contract ISafeProtocolHooks)"
                              }
                            },
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1126:25:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISafeProtocolHooks_$236",
                              "typeString": "contract ISafeProtocolHooks"
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1152:17:2",
                          "memberName": "supportsInterface",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "1126:43:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                            "typeString": "function (bytes4) view external returns (bool)"
                          }
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1126:81:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1102:105:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 98,
                  "nodeType": "IfStatement",
                  "src": "1098:187:2",
                  "trueBody": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "1209:76:2",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 94,
                              "name": "hooks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73,
                              "src": "1268:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 93,
                            "name": "AddressDoesNotImplementHooksInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "1230:37:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1230:44:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "RevertStatement",
                        "src": "1223:51:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 99,
                        "name": "enabledHooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1294:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 102,
                      "indexExpression": {
                        "expression": {
                          "id": 100,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1307:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1311:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1307:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1294:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 103,
                      "name": "hooks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "1321:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1294:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:32:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 107,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1354:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1358:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1354:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 109,
                        "name": "hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "1366:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 106,
                      "name": "HooksChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "1341:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1341:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "EmitStatement",
                  "src": "1336:36:2"
                }
              ]
            },
            "documentation": {
              "id": 71,
              "nodeType": "StructuredDocumentation",
              "src": "824:217:2",
              "text": " @notice Sets hooks on an account. If Zero address is set, manager will not perform pre and post checks for on Safe transaction.\n @param hooks Address of the hooks to be enabled for msg.sender."
            },
            "functionSelector": "fb63daa1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setHooks",
            "nameLocation": "1055:8:2",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "hooks",
                  "nameLocation": "1072:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "1064:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1064:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1063:15:2"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1088:0:2"
            },
            "scope": 114,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "HooksManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          114
        ],
        "name": "HooksManager",
        "nameLocation": "144:12:2",
        "scope": 115,
        "usedErrors": [
          55
        ],
        "usedEvents": [
          51
        ]
      }
    ],
    "license": "LGPL-3.0-only"
  },
  "id": 2
}